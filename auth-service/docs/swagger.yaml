basePath: /v1
definitions:
  request.Register:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: securepassword123
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  request.SignIn:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.VerifyEmail:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  response.Error:
    properties:
      error:
        example: message
        type: string
    type: object
  response.Token:
    properties:
      token:
        example: eyJhbGciOiJIUzI1...
        type: string
    type: object
  response.User:
    properties:
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for user authentication and authorization
  title: Authentication and Authorization Service
  version: "1.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: register
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: Register
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Login and get JWT
      operationId: sign-in
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: SignIn
      tags:
      - auth
  /auth/verify-email:
    post:
      consumes:
      - application/json
      description: Confirm user's email with a verification code
      operationId: verify-email
      parameters:
      - description: Email and verification code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.VerifyEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: Verify email
      tags:
      - auth
swagger: "2.0"
